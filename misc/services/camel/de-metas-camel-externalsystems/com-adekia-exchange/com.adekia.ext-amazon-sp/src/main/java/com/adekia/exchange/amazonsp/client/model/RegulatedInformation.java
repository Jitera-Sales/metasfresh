/*
 * Selling Partner API for Orders
 * The Selling Partner API for Orders helps you programmatically retrieve order information. These APIs let you develop fast, flexible, custom applications in areas like order synchronization, order research, and demand-based decision support tools.
 *
 * OpenAPI spec version: v0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.adekia.exchange.amazonsp.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.adekia.exchange.amazonsp.client.model.RegulatedInformationField;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.List;
/**
 * The regulated information collected during purchase and used to verify the order.
 */
@Schema(description = "The regulated information collected during purchase and used to verify the order.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-06-28T13:53:07.940430682+02:00[Europe/Paris]")
public class RegulatedInformation {
  @JsonProperty("Fields")
  private List<RegulatedInformationField> fields = new ArrayList<RegulatedInformationField>();

  public RegulatedInformation fields(List<RegulatedInformationField> fields) {
    this.fields = fields;
    return this;
  }

  public RegulatedInformation addFieldsItem(RegulatedInformationField fieldsItem) {
    this.fields.add(fieldsItem);
    return this;
  }

   /**
   * A list of regulated information fields as collected from the regulatory form.
   * @return fields
  **/
  @Schema(required = true, description = "A list of regulated information fields as collected from the regulatory form.")
  public List<RegulatedInformationField> getFields() {
    return fields;
  }

  public void setFields(List<RegulatedInformationField> fields) {
    this.fields = fields;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RegulatedInformation regulatedInformation = (RegulatedInformation) o;
    return Objects.equals(this.fields, regulatedInformation.fields);
  }

  @Override
  public int hashCode() {
    return Objects.hash(fields);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RegulatedInformation {\n");
    
    sb.append("    fields: ").append(toIndentedString(fields)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
