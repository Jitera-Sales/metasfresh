/*
 * Selling Partner API for Orders
 * The Selling Partner API for Orders helps you programmatically retrieve order information. These APIs let you develop fast, flexible, custom applications in areas like order synchronization, order research, and demand-based decision support tools.
 *
 * OpenAPI spec version: v0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.adekia.exchange.amazonsp.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
/**
 * The reason for rejecting the order&#x27;s regulated information. Not present if the order isn&#x27;t rejected.
 */
@Schema(description = "The reason for rejecting the order's regulated information. Not present if the order isn't rejected.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-06-28T13:53:07.940430682+02:00[Europe/Paris]")
public class RejectionReason {
  @JsonProperty("RejectionReasonId")
  private String rejectionReasonId = null;

  @JsonProperty("RejectionReasonDescription")
  private String rejectionReasonDescription = null;

  public RejectionReason rejectionReasonId(String rejectionReasonId) {
    this.rejectionReasonId = rejectionReasonId;
    return this;
  }

   /**
   * The unique identifier for the rejection reason.
   * @return rejectionReasonId
  **/
  @Schema(required = true, description = "The unique identifier for the rejection reason.")
  public String getRejectionReasonId() {
    return rejectionReasonId;
  }

  public void setRejectionReasonId(String rejectionReasonId) {
    this.rejectionReasonId = rejectionReasonId;
  }

  public RejectionReason rejectionReasonDescription(String rejectionReasonDescription) {
    this.rejectionReasonDescription = rejectionReasonDescription;
    return this;
  }

   /**
   * The human-readable description of this rejection reason.
   * @return rejectionReasonDescription
  **/
  @Schema(required = true, description = "The human-readable description of this rejection reason.")
  public String getRejectionReasonDescription() {
    return rejectionReasonDescription;
  }

  public void setRejectionReasonDescription(String rejectionReasonDescription) {
    this.rejectionReasonDescription = rejectionReasonDescription;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RejectionReason rejectionReason = (RejectionReason) o;
    return Objects.equals(this.rejectionReasonId, rejectionReason.rejectionReasonId) &&
        Objects.equals(this.rejectionReasonDescription, rejectionReason.rejectionReasonDescription);
  }

  @Override
  public int hashCode() {
    return Objects.hash(rejectionReasonId, rejectionReasonDescription);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RejectionReason {\n");
    
    sb.append("    rejectionReasonId: ").append(toIndentedString(rejectionReasonId)).append("\n");
    sb.append("    rejectionReasonDescription: ").append(toIndentedString(rejectionReasonDescription)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
